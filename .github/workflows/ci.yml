name: Python-CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12","3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Run tests
      run: pytest
    # - name: Run linters
    #   run: |
    #     pip install flake8 black isort
    #     flake8 .
    #     black --check .
    #     isort --check .

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12","3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Store built package
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Download built package
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@3fbcf7ccf443305955ce16db9de8401f7dc1c7dd
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}